-- You need to install IPPrint and HsColour with cabal to use this config.
-- If you find all the loading messages anoying you may want to set an alias:
-- alias ghci="ghci -v0"

-- multiple line output
:set +m

-- http://chrisdone.com/posts/making-ghci-fast
-- :set -fobject-code
-- :set -fno-code

-- Make suggestions for misspelled names
:set -fhelpful-errors


-- red color prompt
-- :set prompt "\ESC[0;37m%s\n\ESC[1;91mλ \ESC[m"
-- blue color prompt
:set prompt "\001\ESC[1;31m\002λ>\001\ESC[m\002 "
-- :set prompt "\001\ESC[34;1m\002λ>\001\ESC[m\002 "
:set prompt2 "… "


import IPPrint.Colored
import qualified IPPrint
import qualified Language.Haskell.HsColour as HsColour
import qualified Language.Haskell.HsColour.Colourise as HsColour
import qualified Language.Haskell.HsColour.Output as HsColour

let myColourPrefs = HsColour.defaultColourPrefs {
                        HsColour.conid = [HsColour.Foreground HsColour.Yellow, HsColour.Bold],
                        HsColour.conop = [HsColour.Foreground HsColour.Yellow],
                        HsColour.string = [HsColour.Foreground HsColour.Green],
                        HsColour.char = [HsColour.Foreground HsColour.Cyan],
                        HsColour.number = [HsColour.Foreground HsColour.Red, HsColour.Bold],
                        HsColour.layout = [HsColour.Foreground HsColour.White],
                        HsColour.keyglyph = [HsColour.Foreground HsColour.White]
                    }

let myPrint = putStrLn . HsColour.hscolour
                        (HsColour.TTYg HsColour.XTerm256Compatible)
                        myColourPrefs
                        False
                        False
                        ""
                        False . IPPrint.pshow

:set -interactive-print=myPrint

-- for hoogle documentation
:def hoogle \x -> return $ ":!hoogle \""        ++ x ++ "\""
:def doc    \x -> return $ ":!hoogle --info \"" ++ x ++ "\""
